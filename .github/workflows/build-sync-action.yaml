name: build-sync-action

on:
  push:
    branches: [ main ]
    paths:
      - '*'
      - '.github/workflows/build-sync-action.yaml'

  pull_request:
    branches: [ main ]
    paths:
      - '*'
      - '.github/workflows/build-sync-action.yaml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Add NuGet Source
      run: dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/daciertech/index.json"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
        
    - name: Login to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.SCHEDULERDEV_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.SCHEDULERDEV_REGISTRY_USERNAME }}
        password: ${{ secrets.SCHEDULERDEV_REGISTRY_PASSWORD }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.SCHEDULERDEV_REGISTRY_LOGIN_SERVER }}/scheduler-cli-sync:latest
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
        labels:
          org.opencontainers.image.title=${{ inputs.title }}

    - name: Build and Push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ secrets.SCHEDULERDEV_REGISTRY_LOGIN_SERVER }}/scheduler-cli-sync-action:latest
        labels: ${{ steps.meta.outputs.labels }}
        args: |
          GITHUB_ACTOR=${{ github.actor }}
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          ORGUNIT=${{ github.event.inputs.username }}
          TOKEN=${{ github.event.inputs.password }}